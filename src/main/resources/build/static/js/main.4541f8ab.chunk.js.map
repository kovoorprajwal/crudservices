{"version":3,"sources":["logo.svg","Crud.js","App.js","reportWebVitals.js","index.js"],"names":["Crud","handleChange","e","type","operation","value","target","setState","addUser","state","deleteUser","console","log","editUserTo","handleSubmit","fetch","method","headers","body","JSON","stringify","username","email","role","then","result","ok","Error","status","json","Alert","isAddition","handleRefresh","catch","parse","isDelete","editUser","isEdit","user","users","errors","error","push","class","clss","Button","onClick","className","this","Table","map","variant","disabled","onChange","style","margin","marginRight","id","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4541f8ab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport {Table, Button, Alert} from 'react-bootstrap';\r\nclass Crud extends React.Component{\r\n\r\nconstructor(){\r\n    super();\r\n    this.state = {\r\n        username: \"\",\r\n        email: \"\",\r\n        role: \"\",\r\n        users: [],\r\n        isAddition: false,\r\n        isEdit: false,\r\n        isDelete: false,\r\n        editUser: {username:\"\",email: \"\", role: \"\"},\r\n        editUserTo: {username:\"\",email: \"\", role: \"\"},\r\n        deleteUser: {username:\"\",email: \"\", role: \"\"},\r\n        addUser: {username:\"\",email: \"\", role: \"\"},\r\n        errors:[]\r\n    };\r\n}\r\n\r\nhandleChange = (e, type, operation) => {\r\n  let  value = e.target.value;\r\n  if(operation===\"add\"){\r\n    this.setState({\r\n        addUser : {...this.state.addUser, [type] : value}\r\n        });\r\n  }\r\n  else if(operation === \"delete\"){\r\n    this.setState({\r\n        deleteUser : {...this.state.deleteUser, [type] : value}\r\n        });\r\n  }\r\n  else if(operation === \"edit\"){\r\n      console.log(type+\" \"+value);\r\n    this.setState({\r\n        editUserTo : {...this.state.editUserTo, [type] : value}\r\n        });\r\n  }\r\n  /*\r\n  if(type === \"username\"){ \r\n  this.setState({\r\n  username: value\r\n  });\r\n  }\r\n  else if(type === \"email\"){ \r\n  this.setState({\r\n  email: value\r\n  });\r\n  }\r\n  else if(type === \"role\"){ \r\n  this.setState({\r\n  role: value\r\n  });\r\n  }*/\r\n}\r\n\r\nhandleRefresh(){\r\n    fetch(\"http://localhost:8080/fetchAllUserDetails\",{\r\n    method:\"get\",\r\n    headers:{'Content-Type':'application/json'},\r\n    }).then((result)=>{\r\n    if(!result.ok)\r\n    throw new Error(result.status)\r\n    return result.json();\r\n    })\r\n    .then((result)=>{\r\n        this.setState({users: result}) \r\n    })\r\n    .catch((e) => {\r\n     this.setState({error:this.state.errors.push[\"unable to refresh data\"]})\r\n    });\r\n\r\n   \r\n}\r\n\r\ncomponentDidMount(){\r\n    fetch(\"http://localhost:8080/fetchAllUserDetails\",{\r\n    method:\"get\",\r\n    headers:{'Content-Type':'application/json'},\r\n    }).then((result)=>{\r\n    if(!result.ok)\r\n    throw new Error(result.status)\r\n    return result.json();\r\n    })\r\n    .then((result)=>{\r\n        this.setState({users: result}) \r\n    })\r\n    .catch((e) => {\r\n     this.setState({error:this.state.errors.push[\"unable to refresh data\"]})\r\n    });\r\n}\r\n\r\nhandleSubmit = (e, operation) => {\r\nif(operation === \"add\"){\r\nfetch(\"http://localhost:8080/createUserDetails\",{\r\n    method:\"post\",\r\n    headers:{'Content-Type':'application/json'},\r\n    body:JSON.stringify({\r\n        \"username\":this.state.addUser.username,\r\n        \"email\":this.state.addUser.email,\r\n        \"role\":this.state.addUser.role\r\n    })\r\n}).then((result)=>{\r\n    if(!result.ok)\r\n    throw new Error(result.status)\r\n    \r\n    return result.json();\r\n    })\r\n    .then((result)=>{\r\n    if(result === true){\r\n<Alert variant = \"secondary\" key=\"123\">created user!</Alert>\r\n    }\r\n    else{\r\n<Alert>Unable to create user!</Alert>\r\n    }\r\n    this.setState({isAddition: false}, this.handleRefresh())\r\n    })\r\n    .catch((e) => {\r\n        this.setState({isAddition: false}, this.handleRefresh())\r\n    });\r\n}\r\nelse if(operation === \"delete\"){\r\n\r\n        fetch(\"http://localhost:8080/deleteUserDetails\",{\r\n            method:\"post\",\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                \"username\":this.state.deleteUser.username,\r\n                \"email\":this.state.deleteUser.email,\r\n                \"role\":this.state.deleteUser.role\r\n            })\r\n        }).then((result)=>{\r\n            if(!result.ok)\r\n            throw new Error(result.status)\r\n            return result.parse();\r\n            })\r\n            .then((result)=>{\r\n            if(result === true){\r\n                \r\n        <Alert>deleted user!</Alert>\r\n            }\r\n            else{\r\n        <Alert>Unable to delete user!</Alert>\r\n            }\r\n            this.setState({isDelete: false}, this.handleRefresh())\r\n            })\r\n            .catch((e) => {\r\n                this.setState({isDelete: false}, this.handleRefresh())\r\n            });\r\n        \r\n}\r\nelse if(operation === \"edit\"){\r\n    fetch(\"http://localhost:8080/updateUserDetails\",{\r\n        method:\"post\",\r\n        headers:{'Content-Type':'application/json'},\r\n        body:JSON.stringify({\r\n            \"username\":this.state.editUser.username,\r\n            \"email\":this.state.editUserTo.email,\r\n            \"role\":this.state.editUserTo.role\r\n        })\r\n    }).then((result)=>{\r\n        if(!result.ok)\r\n        throw new Error(result.status)\r\n        return result.parse();\r\n        })\r\n        .then((result)=>{\r\n        if(result === true){\r\n            <Alert>edited user!</Alert>\r\n            \r\n        }\r\n        else{\r\n    <Alert>Unable to edit user!</Alert>\r\n       }\r\n        this.setState({isEdit: false}, this.handleRefresh())\r\n        })\r\n        .catch((e) => {\r\n            this.setState({isEdit: false}, this.handleRefresh())\r\n        });\r\n    \r\n}\r\n\r\n}\r\n\r\neditUser = (user) => {\r\n   this.setState({\r\n    isEdit: true,\r\n    editUser: {username:user.username, email:user.email, role:user.role}})\r\n}\r\n\r\naddUser = () => {\r\n    this.setState({\r\n        isAddition: true,\r\n        })\r\n}\r\n\r\ndeleteUser = (user) => {\r\n    this.setState({\r\n        isDelete: true,\r\n        deleteUser: {username:user.username, email:user.email, role:user.role}})\r\n}\r\n\r\nrender(){\r\n    return(\r\n        <div class = \"mainDiv\">\r\n            <div clss= \"addDiv\">\r\n            <Button  onClick={() => this.addUser()} className = \"addButton\"> Add </Button>\r\n       </div>\r\n{!this.state.isEdit && !this.state.isAddition && !this.state.isDelete ?  (\r\n    <div className = \"tableWrapper\" >\r\n\r\n       <Table className= \"tableData\">\r\n        <thead>\r\n          <tr className = \"rowDiv\">\r\n            <th className = \"inputPart\">User Name</th>\r\n            <th className = \"inputPart\">Email</th>\r\n            <th className = \"inputPart\">Role</th>\r\n            <th className = \"inputPart\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.state.users.map(user => (\r\n            <tr key={user.username} className = \"rowDiv\">\r\n              <td className = \"valuePart\">{user.username}</td>\r\n              <td className = \"valuePart\">{user.email}</td>\r\n              <td className = \"valuePart\">{user.role}</td>\r\n              <td className = \"valuePart\">\r\n                <Button variant=\"info\" onClick={() => {this.editUser(user)}}>Edit</Button>\r\n                &nbsp;<Button variant=\"danger\" onClick={() => this.deleteUser(user)}>Delete</Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      </div>) :null}\r\n      { this.state.isEdit ? (\r\n          <div className = \"mainDiv\">\r\n          <div className = \"tableWrapperdel\" >\r\n                  <div className = \"rowDivdel\">\r\n                  <label className = \"inputPartdel\"></label>\r\n                  <input className = \"valuePart\"  value = \"Current Value\" disabled/>\r\n                  <input className = \"valuePart\"  value = \"Modify Value\" disabled/>\r\n                  </div>\r\n            <div className = \"rowDivdel\">\r\n            <label className = \"inputPartdel\">username :</label>\r\n            <input className = \"valuePart\"  value = {this.state.editUser.username} disabled/>\r\n            <input className = \"valuePart\"  value = {this.state.editUser.username} disabled/>\r\n            </div>\r\n            <div className = \"rowDivdel\">\r\n            <label className = \"inputPartdel\" >email :</label>\r\n            <input className = \"valuePart\" value = {this.state.editUser.email} disabled/>\r\n            <input className = \"valuePart\" onChange = {(e)=>{this.handleChange(e, \"email\", \"edit\")}} />\r\n            </div>\r\n            <div className = \"rowDivdel\">\r\n            <label className = \"inputPartdel\" >role :</label>\r\n            <input className = \"valuePart\"  value = {this.state.editUser.role} disabled/>\r\n            <input className = \"valuePart\"  onChange= {(e)=>{this.handleChange(e, \"role\", \"edit\")}} />\r\n            </div>\r\n            </div>\r\n            <div className = \"rowDivsub\">\r\n            <submit onClick = {()=>{this.handleSubmit(this.state.editUser, \"edit\")}}> Submit </submit>\r\n            </div> \r\n            </div>) : null\r\n}\r\n\r\n{ this.state.isDelete ? (\r\n    <div className = \"mainDiv\">\r\n    <div className = \"tableWrapperdel\" >\r\n            <div className = \"rowDivdel\">\r\n            <label className = \"inputPartdel\"></label>\r\n            <input className = \"valuePart\"  value = \"Current Value\" disabled/>\r\n            </div>\r\n            <div className = \"rowDivdel\">\r\n            <label className = \"inputPartdel\">username :</label>\r\n            <input className = \"valuePart\"  value = {this.state.deleteUser.username}  disabled/>\r\n            </div>\r\n            <div className = \"rowDivdel\">\r\n            <label className = \"inputPartdel\" >email :</label>\r\n            <input className = \"valuePart\"  value = {this.state.deleteUser.email} disabled/>\r\n            </div>\r\n            <div className = \"rowDivdel\">\r\n            <label className = \"inputPartdel\" >role :</label>\r\n            <input className = \"valuePart\"  value = {this.state.deleteUser.role} disabled/>\r\n            </div>\r\n           </div>\r\n            <div style= {{margin:'auto', marginRight:'30vw'}}>\r\n            <button id = \"submitButton\" onClick = { () => {this.handleSubmit(this.state.deleteUser, \"delete\")}}> delete </button>\r\n            </div>\r\n           \r\n            </div>\r\n    ) : null\r\n}\r\n\r\n{ this.state.isAddition ? (\r\n           <div className = \"mainDiv\">\r\n           <div className = \"tableWrapperdel\" >\r\n                   <div className = \"rowDivdel\">\r\n                   <label className = \"inputPartdel\"></label>\r\n                   <input className = \"valuePart\"  value = \"Value\" disabled/>\r\n                  </div>\r\n            <div className = \"rowDivdel\">\r\n            <div className = \"inputPartdel\">username :</div>\r\n            <input className = \"valuePart\" onChange = {(e)=>{this.handleChange(e, \"username\", \"add\")}} />\r\n            </div>\r\n            <div className = \"rowDivdel\">\r\n            <div className = \"inputPartdel\" >email :</div>\r\n            <input className = \"valuePart\" onChange = {(e)=>{this.handleChange(e, \"email\", \"add\")}} />\r\n            </div>\r\n            <div className = \"rowDivdel\">\r\n            <div className = \"inputPartdel\" >role :</div>\r\n            <input className = \"valuePart\" onChange= {(e)=>{this.handleChange(e, \"role\", \"add\")}} />\r\n            </div>\r\n            </div>\r\n            <div  style= {{margin:'auto', marginRight:'30vw'}}>\r\n            <button onClick = {()=>{this.handleSubmit(this.state.addUser, \"add\")}}> Submit </button>\r\n            </div>\r\n        </div>\r\n    ) : null\r\n}\r\n</div>\r\n    )\r\n}\r\n}\r\n export default Crud;","import logo from './logo.svg';\nimport './App.css';\nimport Crud from './Crud.js';\nfunction App() {\n  return (\n    <div className=\"Application\">\n\n      <Crud />  \n\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}